//下标脚本
import Cocoa

struct subexample {
    let decrementer: Int
    subscript(index: Int) -> Int {
        return decrementer / index
    }
}
let division = subexample(decrementer: 100)
print("\(division.decrementer) / 5 = \(division[5])")
print("\(division.decrementer) / 3 = \(division[10])")
print("\(division.decrementer) / 9 = \(division[9])")


import Cocoa

class daytoweek {
    private var days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "saturday"]
    subscript (index: Int) -> String {
        get {
            return days[index]   //声明下标脚本的值
        }
        set (newValue) {
            self.days[index] = newValue  //赋值
        }
    }
}
var p = daytoweek()
print(p[0])
print(p[1])
print(p[4])
print(p[5])


//设值
import Cocoa
var number = ["spider": 4, "ant": 8, "cat": 2, "pig": 6]
number["bird"] = 1
number["pig"] = 16
print(number)


//下标脚本的重载
import Cocoa

struct Matrix {
    let rows: Int, columns: Int
    var print: [Double]
    init(rows: Int, columns: Int) {
        self.rows = rows
        self.columns = columns
        print = Array(repeating: 0.0, count: rows * columns)
    }
    subscript(row: Int, column: Int) -> Double {
        get {
            return print[(row * columns) + column]
        }
        set {
            print[(row * columns) + column] = newValue
        }
    }
}

var mat = Matrix(rows: 3, columns: 3)
mat[0,0] = 1.0
mat[1,1] = 2.0
mat[2,2] = 9.9
mat[1,2] = 5.1
mat[2,1] = 6.6

for x in 0...mat.rows - 1 {
    for y in 0...mat.columns - 1 {
        print("\(mat[x,y])",terminator: " ")
    }
    print("\n")
}
